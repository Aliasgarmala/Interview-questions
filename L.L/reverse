    public static reverse(Node start){
     Node ptr,ptr1,prev;
      //base condition when using 2 pointers
      prev = null;
      ptr = start;

      while(ptr != null){

        ptr1 = ptr.next;
        ptr.next = prev;
        prev = ptr;
        ptr = ptr1;
      }
      //very imporatant not ptr but prev
      //put the start at the end of the list
     start = prev
  }
  
  //now print the L.L
  
  class Node{
  int data;
  Node next;
  
  Node(){}
  
  Node(int x){
    data = x;
    next = null;
  }
}
  


// recursive solution
//much easier to implent without reversing the L.L and prints the L.L in reverse order

public static void reverse(Node start){

    while (start != null){
        reverse(start.next);
        System.out.println(start.data+ " ");
    
    }
}
