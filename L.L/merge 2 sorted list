The key to solve the problem is defining a fake head. Then compare the first elements from each list. 
Add the smaller one to the merged list. Finally, when one of them is empty, simply append it to the merged list, 
since it is already sorted.

public class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
 
        ListNode p1 = l1;
        ListNode p2 = l2;
        //like a fake start very important 
        ListNode fakeHead = new ListNode(0);
        ListNode p = fakeHead;
 
        // checj for both
        while(p1 != null && p2 != null){
          if(p1.val <= p2.val){
              p.next = p1;
              p1 = p1.next;
          }else{
              p.next = p2;
              p2 = p2.next;
          }
 
          p = p.next;
        }
 
        // important as you just appened here which is left
        if(p1 != null)
            p.next = p1;
        if(p2 != null)
            p.next = p2;
 
        //returning from the next element as first element is fake
        return fakeHead.next;
    }
}
