//given an array of integers find the index of the numbers which would sum to 10
//for eg: array[1,2,8,9];
//return index 0 and 3

class Solution {
  public static void main(String[] args) {
           
    int[] numbers = {1,2,8,9};
    findIndex(numbers);
    
  }
  
  public static void findIndex(int [] numbers){
    
    int sum = 10;
    
    label:
    for(int j = 0; j < numbers.length; j++){
      
      int look_for_num = sum - numbers[j];

      for(int i = 0; i < numbers.length; i++){
        
        if( look_for_num == numbers[i] ){
          
          System.out.println("index at "+j+" and "+i);
          break label;
        }
      }
    }
  }
}

// here the complexity is O(n2);
improve the complexity

class Solution {
  public static void main(String[] args) {
    
    
    Integer [] arr = {2,5,45,7,3,5,1,8,9};
    Integer sum = 10;
    
   HashSet<Integer> set = new HashSet<Integer>();
    for (int num : arr) {
        if (set.contains(sum - num)) {
            String s = num + ", " + (sum - num);
            System.out.println(s);
        }
        set.add(num);
    }
   
  }
}
